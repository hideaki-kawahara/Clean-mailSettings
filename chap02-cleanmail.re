= きれいなメールとは？
この本での「@<b>{きれいなメール}」の定義をします、あくまで「迷惑メールにされにくい」という意味であって、メールの文面の話ではありません。

== きれいの定義

 * 送信元メールアドレスが正しい形式であるか？
 * きちんとした場所から送信しているか？
 * 認証されたメールサーバを使っているか？
 * メール通信は暗号化されているか？

上の4つのことが守れているメールをこの本では「きれいなメール」と呼ぶことにします。

もしひとつでも違反していると、きれいなメールとは判定されません。きれいなメールでないと、場合によってはそのメールは迷惑メールとして判定され、メールを送信しても届かない事態も発生してしまうかもしれません。ひとつずつ点検しながら、「きれいなメール」を目指しましょう！


== 送信元メールアドレスはFQDN形式で「きれい」
多くのメールサーバにおいて送信元のメールアドレスにドメイン名を使用しないと送信拒否の設定になっている、そしてメールアドレスに使用するドメイン名はFQDN@<fn>{FQDN}形式でなければなりません。IPアドレス形式のメールアドレスを有効として許可しているメールサーバも存在しますが、仮に送信できたとしても受信側のメールサーバでエラーとして判定されてしまうことも考えられます。受信サーバまで到達したとしてもGmailをはじめとする多くのメールサーバで採用されている@<b>{迷惑メールフィルターがIPアドレス形式のメールアドレスを迷惑メールとして判定してしまいます。}@<br>{}

IPアドレス形式なんかしていないと思っていても、ドメイン名の設定にミスがある場合も問題です。ドメイン名の設定が@<code>{mail.sample.com}となっているメールの場合、ホスト側に設定ミスがあると、FQDN形式ではないと判定されるので注意が必要です。@<br>{}
この辺りはDNS@<fn>{DNS}およびDNSサーバ周りの知識が必要です。ドメイン名の設定を正しく行うためには、DNSの知識は避けて通ることはできません。この機会にDNSの知識を少しでも習得することを推奨します。今はDNSの設定はWebシステムで完結しますので気軽にDNS設定をいじって体験することを推奨します。

//footnote[FQDN][Fully Qualified Domain Nameのことで日本語では「完全修飾ドメイン名」と呼ばれる。ドメイン名、サブドメイン名、ホスト名を省略せずに記載する方法です。]
//footnote[DNS][Domain Name Systemのことでドメイン名とIPアドレスを紐づけるシステムです。]

===[column] ドメイン名の設定にミスによる弊害 
@<b>{実はサーバのホスト名は勝手に名乗れます！！}

メールのシステム自体がローカルネットワークで使用されている仕組みをそのままインターネット用に拡張して作られため、その当時の仕様がそのまま残っており、そのため@<b>{設定ミスも含めてメールサーバのホスト名は勝手に名乗れます}。
メールを送信する側は好き勝手なメールサーバ名を名乗り送信できるので、これが迷惑メールの根本的な原因のひとつとされていることもあり、メールアドレスがFQDNであることは非常に重要な要素といえます。

===[/column]

===[column] IPアドレス形式のメールアドレス
今は使うことがないですが、コラムとしてIPアドレス形式のメールアドレスの書き方を紹介しましょう。

IPアドレス形式のメールアドレスは@<code>{sample@192.168.0.1}という形を想像すると思いますが、この書き方はエラーです。

正しくは@<code>{sample@[192.168.0.1]}という形式で書きます。

===[/column]



== 送信元における「きれい」
メールを送信する場所、言いかえれば、インターネットにおける場所は重要な要素です。たとえば仕事をする上で情報にアクセスするとき制限を加えることがありますが、そのときに使用するのがIPアドレス制限であり正しいところからアクセスしているのかを確認しています。メール送信でも同じでメールアドレス所有者が正しいところからアクセスしているのかが重要です。

今でこそメールはメールアドレスを預かっているメールサーバから送信するのが当たり前ですが、2005年ぐらいまでは郵便と同じようにメール送信はどこからでも可能でした。しかしそれが、迷惑メールの標的となりメール送信に対して制限がかかるようになりました。そのため、今ではメールサーバが管理しているドメイン名とEnvelope Fromが一致しないと送信できなくなっています。

現在のメールサーバは、Webメールのログイン認証や送信時に認証を加えることで送信元の正当性の検証を行っています。なので、ログインまたはメール送信認証さえ通れば送信元が正しいと判断されます。

//raw[|latex|\pagebreak]

===[column] メール送信制限の歴史

メール送信制限は迷惑メールとの戦いの歴史ともいえます。新たな迷惑メールが生まれるたびに、次にあげるテクノロジーが導入されていきました。

 1. Outbound Port25 Blocking（25番@<fn>{25}ポートブロック）
 2. POP before SMTP
 3. SMTP Authentication（サブミッション587番ポート）

現在のメール送信プロトコルのSMTP@<fn>{SMTP}は2種類あります、最初に考案されたプロトコルは認証に対応しておらず、そのため現在はドメインに属していない送信元はOutbound Port25 Blockingによりポート番号@<fn>{ポート番号}からブロックするようになりました。@<br>{}


その後、ドメインに属していない送信のために新しいメール送信方法が考案されました。それがPOP before SMTPとSMTP Authenticationです。POP before SMTPはメール受信することであるPOP@<fn>{POP}が認証することを利用しており、メール受信をしたら対象のIPアドレスから一定時間メール送信を許可します。こちらはメールサーバ自体の変更をしなくても可能な方法ですが、仕組みをPOPに頼ることでPOPサーバの負荷がムダにあがってしまうこと、メール受信さえしてしまえば良くて送信については結局何も考慮されていないので、このときに迷惑メールの送信ができてしまう穴があったためしだいに廃れていきました。@<br>{}


SMTP Authenticationはメール送信のプロトコルに対して認証ルールを追加したものです。許可されたユーザーのみに対して送信をするように認証する仕組みを追加しています。認証を追加するにあたり既存のプロトコルを拡張するのではなく新たなプロトコルを追加しました。これがサブミッション587番ポートです。現在はSMTP Authenticationを使うのが一般的です。

===[/column]


//footnote[25][25番というのは最初に使われたメールのポート番号です。]

//footnote[SMTP][Simple Mail Transfer Protocolのこと、メール送信プロトコルには、送信、配信、転送、受信など多数の機能があるが、それらを意識せずにこのプロトコルを使うだけで使うことができる。]
//footnote[ポート番号][ポート番号はIPアドレスをマンションの住所と例えたときの、部屋の番号に相当するものです。一般的な通信はIPアドレスとポート番号を目指して通信します。]
//footnote[POP][Post Office Protocolのこと。メールサーバからメールをダウンロードし、ダウンロードしたサーバから削除する、郵便と同じ仕組みの受信方法です。]



== メールサーバにおける「きれい」
メールサーバは他のメールサーバと通信しており、サーバ自身から近くのメールサーバへメールをリレーをすることでメールを届けています。リレーするときメールを代理で送信しているためここに認証を入れることが事実上不可能となっております、ここでは認証のない世界が現在もあります。

そのような状況で迷惑メールを送信する人たちは考えました。送信するためのメールサーバが使えないのであれば、メールサーバを立てれば良いと。そしてメールサーバリレーに紛れてしまえば良いと考えました。一応ですがメールサーバのリレーはIPアドレスによる制限はかけていますので多少の防御できます、しかしメールサーバの数が爆発的に増えている状況の中においてIPアドレスによる制限には限界があります。

ここで考えることはメールサーバのアクセス制限ではなく、メールサーバが正しいということがリレー間で担保されればよいということです。
それが@<b>{SPF}、@<b>{sender ID}、@<b>{DKIM}です。


== メール通信内容における「きれい」
メールサーバ間での通信は歴史が長くUUCP@<fn>{UUCP}時代までさかのぼります。その頃のインターネットは性善説による世界でした。このような世界ではすべての通信プロトコルは暗号化通信を行っていません。しかし、多くの人がインターネットを使うようになると、性善説が通用しなくなりました、そのため、現在では多くのプロトコルが暗号化通信をするようになりました。メールに関しても暗号化通信が導入されていきました。SMTP自身は暗号化通信してしておらず、メール本文がそのまま暗号化されずにインターネットを流れていきます。POPにいたってはメール本文だけでなくログインIDとパスワードを暗号化していない平文で流しておりとても危険です。

メールの暗号化には2種類の方法が使用されています。TLS@<fn>{TLS}とSTARTTLS@<fn>{STARTTLS}です。
SSLということもありますが、この本ではTLSに統一します。TLSを使用したメール送信ではプロトコル自体が異なっているため、SMTPが今まで使っていたポートを使用することができません。そのため、新しいポート番号を設定します。送信ではSMTP over TLSを使用し、受信も同様に新しいポート番号を設定しPOP over TLSまたはIMAP@<fn>{IMAP} over TLSを使って受信をします。アプリケーションの自動設定やWebメールの利用で、利用者の方で多く使われています。

もう1つのSTARTTLSは、非暗号化通信の途中で暗号化通信に変更が可能なやり方でメールの通信などをを行います。このため既存のポート番号を変更しなくても良いというメリットがあります。さらに接続先のメールサーバが暗号化に対応していない場合は暗号化モードに入らず非暗号化のまま通信します。接続してきたメールサーバが非暗号化のまま通信してきたら続行すれば良いなど多くのメリットがあるため、メールサーバのリレーでよく使われており、Gmailが使用したため多くのメールサーバで採用されています。

STARTTLSに対応させるにはメールサーバの再インストールが必要になるケースもあり、ものすごく手間です。そのため今回この本では書きません。もし使用中のメールサーバが@<b>{STARTTLSに未対応のメールサーバの場合は対応サーバに移転することを推奨します}。

//image[gmail2][「To自分」の前に出る鍵に斜線が入ったアイコン][scale=1,pos=H,border=on]

STARTTLSに対応しているか確認方法をご紹介します。自分のメールをGmail宛にメールして鍵に斜線が入ったアイコン表示だったら、STARTTLS非対応と思って間違いないです。

===[column] APOPについて
メールの暗号化についてAPOP(Authenticated Post Office Protocol)を出さなかったのは、使うべきではないプロトコルだからです。

APOPはログインIDとパスワードの暗号化にMD5を使用しています。

MD5は暗号学的ハッシュ関数と呼ばれるもの一種です。暗号学的ハッシュ関数は入力された値から規則に基づいた入力された値とは異なる固定長文字列の値を出力する仕組みです。利点としては出力する値の計算が早く、出力された値から入力された値を簡単推測できないことが挙げられます。

しかしMD5は2004年8月、衝突耐性に問題有りと提言され、2007年にはIPAよりAPOPを使用しないよう注意喚起が出されています。これによりMD5を使ったメール暗号化は使用してはいけない方式となりました。



脆弱性関連情報取扱い：APOP方式におけるセキュリティ上の弱点（脆弱性）の注意喚起について @<href>{https://www.ipa.go.jp/security/vuln/200704_APOP.html}

===[/column]




//footnote[UUCP][Unix to Unix Copy Protocolのこと。初期のインターネットで使われたプロトコル。1日1回まとめて通信するなどの機能がある。]
//footnote[TLS][Transport Layer Securityのこと。セキュリティ通信を行うためのプロトコルで、アプリケーションに対して中立な実装となっており、他のプロトコルに追加できる仕組みになっている。]
//footnote[STARTTLS][STARTTLSはメールの送受信するプロセスにおいて暗号化通信する仕組みのこと。]
//footnote[IMAP][Internet Message Access Protocolのこと。POPと異なり、メールをメールサーバ上に保存したまま管理するのが特徴で、Webメールはこの仕組みを使っている。]
