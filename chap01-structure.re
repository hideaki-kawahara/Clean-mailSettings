= メールの基本的構造

メールに関する設定を学ぶ前に、メールの基本的な構造を見ていきましょう。そうすることで、よりいっそう理解を深めることができます。

== メールは封筒です
//image[futo1][メールと郵便の比較][scale=0.7]
//image[futo2][メールと郵便の役割分担][scale=2.0]



Webメールの画面やメールソフトで見ているときを郵便で例えるなら、封筒に書いてある宛名、差出人はメールヘッダー@<fn>{メールヘッダー}に記載してあります、引き受け郵便局（消印）もメールヘッダーに記載しています。普段皆さんが目にされているのは、メールの中身を取り出したごく一部の内容で、メールソフトではすべての情報を表示しません。郵便物でいうと封筒は見ることなく、中身の便せんだけ見ているような状態です。From（送信元）とTo（送信先）は便せんに書かれている内容です。


封筒の外のことはメールヘッダーに記載されています、メールヘッダーを見ることは普段しないですが重要な情報が書かれています、メールを出された場所や経由してきたところなどが書かれています、メールを返信するとスレッド状になって見ることができるのもメールヘッダーに記載された情報を元に実現している機能です。@<b>{SPFやSender IDやDKIMもメールヘッダーに記載されている}ので見たことない人は一度見ることを推奨します。

== Envelope To
ここで1つ疑問が出てきます。

メールソフトで見ているTo（送信先）が、封筒の外に書かれている内容は異なっても送ることができるのか？ということです。実は、実際にメールを送信する宛先は「封筒の外側」に書かれている内容を元にしているので、封筒の外側と内側でTo（送信先）が異なっていようとも、極端な話内側に書かれているTo（送信先）が飾りだろうとフェイクだろうと、メールを送ることはできてしまいます。ときおり、To（送信先）に大量のメールが列挙されていることがありますが、これがそのまま封筒の外に書かれているわけではなく。@<b>{メールサーバがTo（送信先）の数だけ封筒を作ってからメールを送信しています}。

このときの封筒の送信先をEnvelope To呼びます。RCPT TOと説明することがありますがRCPT TOはメールサーバへのコマンドなので説明としては使いません。@<img>{futo2}にもメールコマンドとして記載していますが、この本ではEnvelope Toに統一します。

また、最近は見かけることが減りましたが、Bcc(ブラインドカーボンコピー)の場合もあります、これも同じでメールサーバが封筒を作ってから送信先をBcc(ブラインドカーボンコピー)から取得します。送信先に自分が書かれていなくても届くのは、この仕組みを使っているからです。

//footnote[メールヘッダー][メールヘッダーとは、メールの送信情報が書かれています、Gmailは右端のその他から「メッセージのソースを表示」から見ることができます。(Gmailアプリからは見ることができません)]

== Envelope From
Envelope ToがあればEnvelope Fromも当然存在します。

意識していなければメールアドレスはFrom（送信元）とEnvelope Fromを同じになりますが、メルマガなど大量メール配信の場合、プログラムで処理をするなどで異なるメールアドレスにすることがあります。@<b>{To（送信先）にメールが届かないときに送信先メールサーバが、送信元に返信するためEnvelope Fromを設定します}。よく見かける「@<b>{これは送信専用メールです}」とメール本文に書かれているメールはFrom（送信元）とEnvelope Fromを異なるメールアドレスに設定しているのです。このメールに対して返信をするとFrom（送信元）とは異なるメールが表示されますが、ここで返信したときに表示される送信先メールアドレスがEnvelope Fromです。@<img>{futo2}ではMAIL FROMと記載していますが、この本ではEnvelope Fromに統一します。


そしてFrom（送信元）とEnvelope Fromはそのメールアドレスが実際に存在していなくてもメールは届きます。これはメールの仕組み上メールを送ることが主目的に作られているためで、これを@<b>{悪用したのが迷惑メールでありフィッシングメール}です。
